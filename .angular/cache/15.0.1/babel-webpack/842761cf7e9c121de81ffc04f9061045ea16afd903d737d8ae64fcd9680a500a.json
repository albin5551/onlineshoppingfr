{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/auth-service.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction LoginComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Required\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class LoginComponent {\n  // uname: any;\n  // pass: any;\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    // pattern='[a-zA-z0-9]{5,20}$'\n    // p=\"^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[!@#\\$&*~]).{8,15}$\";\n    this.newform = new FormGroup({\n      email: new FormControl('', [Validators.required]),\n      password: new FormControl('', [Validators.required])\n    });\n  }\n  onsubmit() {\n    if (this.newform.valid) {\n      this.authService.login(this.newform.value).subscribe(result => {\n        if (result.userId) {\n          this.resdata = result;\n          localStorage.setItem('token', this.resdata.accessToken.value);\n          localStorage.setItem('name', this.resdata.name);\n          localStorage.setItem('userid', this);\n          console.log(result);\n          alert(\"login sucessful\");\n          this.router.navigate(['/home']);\n        } else {\n          alert(\"login not sucessful\");\n        }\n      });\n    }\n  }\n  add() {\n    this.router.navigate(['/userreg']);\n  }\n  ngOnInit() {}\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthServiceService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 21,\n    vars: 3,\n    consts: [[\"lang\", \"en\"], [3, \"formGroup\", \"ngSubmit\"], [\"type\", \"text\", \"formControlName\", \"email\", \"name\", \"email\", \"placeholder\", \"Enter username\", \"required\", \"\"], [4, \"ngIf\"], [\"type\", \"password\", \"formControlName\", \"password\", \"name\", \"pass\", \"placeholder\", \"Enter password\", \"required\", \"\"], [\"type\", \"submit\"], [\"type\", \"submit\", 3, \"click\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"html\", 0);\n        i0.ɵɵelement(1, \"head\");\n        i0.ɵɵelementStart(2, \"body\")(3, \"h1\");\n        i0.ɵɵtext(4, \"LOGIN\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_5_listener() {\n          return ctx.onsubmit();\n        });\n        i0.ɵɵelementStart(6, \"label\");\n        i0.ɵɵtext(7, \"username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 2)(9, \"br\")(10, \"br\");\n        i0.ɵɵtemplate(11, LoginComponent_div_11_Template, 2, 0, \"div\", 3);\n        i0.ɵɵelementStart(12, \"label\");\n        i0.ɵɵtext(13, \"password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"input\", 4)(15, \"br\");\n        i0.ɵɵtemplate(16, LoginComponent_div_16_Template, 2, 0, \"div\", 3);\n        i0.ɵɵelementStart(17, \"button\", 5);\n        i0.ɵɵtext(18, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_19_listener() {\n          return ctx.add();\n        });\n        i0.ɵɵtext(20, \"Add User\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.newform);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", (ctx.newform.controls[\"email\"].errors == null ? null : ctx.newform.controls[\"email\"].errors[\"required\"]) && (ctx.newform.controls[\"email\"].touched || ctx.newform.controls[\"email\"].dirty));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", (ctx.newform.controls[\"password\"].errors == null ? null : ctx.newform.controls[\"password\"].errors[\"required\"]) && (ctx.newform.controls[\"password\"].touched || ctx.newform.controls[\"password\"].dirty));\n      }\n    },\n    dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.FormGroupDirective, i4.FormControlName],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;;;;;;ICShEC,2BAAsI;IAAAA,wBAAQ;IAAAA,iBAAM;;;;;IAMlJA,2BAAgJ;IAAAA,wBAAQ;IAAAA,iBAAM;;;ADLnK,OAAM,MAAOC,cAAc;EAG3B;EACA;EACEC,YAAoBC,WAA8B,EAAUC,MAAa;IAArD,gBAAW,GAAXD,WAAW;IAA6B,WAAM,GAANC,MAAM;IAClE;IACA;IACA,YAAO,GAAW,IAAIN,SAAS,CAC7B;MACAO,KAAK,EAAC,IAAIR,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACO,QAAQ,CAAC,CAAC;MAC/CC,QAAQ,EAAC,IAAIV,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACO,QAAQ,CAAC;KAChD,CACF;EAR2E;EAU5EE,QAAQ;IACN,IAAG,IAAI,CAACC,OAAO,CAACC,KAAK,EAAC;MACpB,IAAI,CAACP,WAAW,CAACQ,KAAK,CAAC,IAAI,CAACF,OAAO,CAACG,KAAK,CAAC,CAACC,SAAS,CAACC,MAAM,IAAE;QAC3D,IAAGA,MAAM,CAACC,MAAM,EAAC;UACf,IAAI,CAACC,OAAO,GAACF,MAAM;UACnBG,YAAY,CAACC,OAAO,CAAC,OAAO,EAAC,IAAI,CAACF,OAAO,CAACG,WAAW,CAACP,KAAK,CAAC;UAC5DK,YAAY,CAACC,OAAO,CAAC,MAAM,EAAC,IAAI,CAACF,OAAO,CAACI,IAAI,CAAC;UAC9CH,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAC,IAAI,CAAC;UACnCG,OAAO,CAACC,GAAG,CAACR,MAAM,CAAC;UAEnBS,KAAK,CAAC,iBAAiB,CAAC;UAExB,IAAI,CAACnB,MAAM,CAACoB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;SAChC,MACG;UACFD,KAAK,CAAC,qBAAqB,CAAC;;MAEhC,CAAC,CAAC;;EAEJ;EAEAE,GAAG;IACH,IAAI,CAACrB,MAAM,CAACoB,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;EAChC;EAEJE,QAAQ,IACR;EAAC;qBAzCUzB,cAAc;EAAA;EAAA;UAAdA,cAAc;IAAA0B;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCV3B/B,+BAAgB;QAChBA,uBAEO;QACPA,4BAAM;QACCA,qBAAK;QAAAA,iBAAK;QACbA,+BAAqD;QAAzBA;UAAA,OAAYgC,cAAU;QAAA,EAAC;QAEnDhC,6BAAO;QAAAA,wBAAQ;QAAAA,iBAAQ;QAAIA,2BAA+F;QAC3HA,iEAAoJ;QAGnJA,8BAAO;QAAAA,yBAAQ;QAAAA,iBAAQ;QAAIA,4BAAoG;QAG9HA,iEAA8J;QAE/JA,kCAAsB;QAAAA,sBAAK;QAAAA,iBAAS;QACpCA,kCAAsC;QAAhBA;UAAA,OAASgC,SAAK;QAAA,EAAC;QAAChC,yBAAQ;QAAAA,iBAAS;;;QAZjDA,eAAqB;QAArBA,uCAAqB;QAGtBA,eAA6H;QAA7HA,iNAA6H;QAM3HA,eAAuI;QAAvIA,6NAAuI","names":["FormControl","FormGroup","Validators","i0","LoginComponent","constructor","authService","router","email","required","password","onsubmit","newform","valid","login","value","subscribe","result","userId","resdata","localStorage","setItem","accessToken","name","console","log","alert","navigate","add","ngOnInit","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/albinantony/Desktop/onlineshoppingfr/onlineshoppingfr/src/app/login/login/login.component.ts","/home/albinantony/Desktop/onlineshoppingfr/onlineshoppingfr/src/app/login/login/login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthServiceService } from 'src/app/service/auth-service.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\n\nexport class LoginComponent implements OnInit {\nresdata:any\n\n// uname: any;\n// pass: any;\n  constructor(private authService:AuthServiceService ,private router:Router){ }\n  // pattern='[a-zA-z0-9]{5,20}$'\n  // p=\"^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[!@#\\$&*~]).{8,15}$\";\n  newform:FormGroup=new FormGroup(\n    {\n    email:new FormControl('',[Validators.required]),\n    password:new FormControl('',[Validators.required])\n    }\n  )\n\n  onsubmit() {\n    if(this.newform.valid){\n      this.authService.login(this.newform.value).subscribe(result=>{\n        if(result.userId){\n          this.resdata=result;\n          localStorage.setItem('token',this.resdata.accessToken.value);\n          localStorage.setItem('name',this.resdata.name);\n          localStorage.setItem('userid',this)\n          console.log(result);\n\n          alert(\"login sucessful\");\n          \n          this.router.navigate(['/home']);\n        }\n        else{\n          alert(\"login not sucessful\");\n        }\n      })\n    }\n    }\n\n    add() {\n    this.router.navigate(['/userreg'])\n      }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    \n</head>\n<body>\n   <h1>LOGIN</h1>\n    <form [formGroup]=\"newform\" (ngSubmit)=\"onsubmit()\" >\n    \n    <label>username</label>    <input type=\"text\" formControlName=\"email\" name=\"email\" placeholder=\"Enter username\" required ><br><br>\n   <div *ngIf=\"newform.controls['email'].errors?.['required'] && (newform.controls['email'].touched ||newform.controls['email'].dirty)\" >Required</div>\n   <!-- <div *ngIf=\"newform.controls['email'].dirty && newform.hasError('required','email')\"> Required </div> -->\n    <!-- <div *ngIf=\"email.errors?.['pattern'] && (email.touched || email.dirty)\" >Enter a valid username</div>  -->\n    <label>password</label>    <input type=\"password\" formControlName=\"password\" name=\"pass\" placeholder=\"Enter password\" required><br>\n    <!-- <div *ngIf=\"newform.controls['password'].dirty && newform.hasError('required','password')\"> Required </div> -->\n\n     <div *ngIf=\"newform.controls['password'].errors?.['required'] && (newform.controls['password'].touched || newform.controls['password'].dirty)\" >Required</div>\n    <!-- <div *ngIf=\"pass.errors?.['pattern'] && (pass.touched || pass.dirty)\" >Enter a valid password</div> -->\n    <button type=\"submit\">Login</button>\n    <button type=\"submit\" (click)=\"add()\">Add User</button>\n\n</form> \n \n</body>\n</html>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}