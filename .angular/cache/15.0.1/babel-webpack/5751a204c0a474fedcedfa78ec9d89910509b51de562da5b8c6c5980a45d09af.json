{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/admin-service.service\";\nimport * as i2 from \"@angular/router\";\nfunction ProductComponent_option_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const category_r1 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", category_r1.categoryId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", category_r1.categoryName, \" \");\n  }\n}\nexport class ProductComponent {\n  constructor(adminService, router) {\n    this.adminService = adminService;\n    this.router = router;\n    this.products = new FormGroup({\n      productName: new FormControl('', [Validators.required]),\n      categoryId: new FormControl('', [Validators.required]),\n      productDescription: new FormControl('', [Validators.required]),\n      productPrice: new FormControl('', [Validators.required]),\n      productStock: new FormControl('', [Validators.required])\n    });\n  }\n  ngOnInit() {\n    this.adminService.loadCategory().subscribe(data => {\n      this.loaddata = data;\n      console.log(this.loaddata);\n    });\n  }\n  onSubmit() {\n    if (this.products.valid) {\n      this.adminService.addProduct(this.products.value).subscribe(result => {\n        if (result.productId) {\n          console.log(result);\n          alert(\"Product Added\");\n        } else {\n          alert(\"Not added\");\n        }\n      });\n    }\n  }\n  static #_ = this.ɵfac = function ProductComponent_Factory(t) {\n    return new (t || ProductComponent)(i0.ɵɵdirectiveInject(i1.AdminServiceService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ProductComponent,\n    selectors: [[\"app-product\"]],\n    decls: 21,\n    vars: 2,\n    consts: [[\"lang\", \"en\"], [3, \"formGroup\", \"ngSubmit\"], [\"type\", \"text\", \"formControlName\", \"productName\", \"name\", \"productName\", \"placeholder\", \"Enter the productname\"], [\"for\", \"categoryId\"], [\"type\", \"input\", \"formControlName\", \"categoryId\", \"name\", \"select\", \"placeholder\", \"Select Category\", 1, \"dropbtn\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"text\", \"formControlName\", \"productDescription\", \"name\", \"productDescription\", \"placeholder\", \"Enter the productdescription\"], [\"type\", \"number\", \"formControlName\", \"productPrice\", \"name\", \"productPrice\", \"placeholder\", \"Enter the Productprice\"], [\"type\", \"number\", \"formControlName\", \"productStock\", \"name\", \"productStock\", \"placeholder\", \"Enter the productStock\"], [\"type\", \"submit\"], [3, \"value\"]],\n    template: function ProductComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"html\", 0);\n        i0.ɵɵelement(1, \"head\");\n        i0.ɵɵelementStart(2, \"body\")(3, \"h1\");\n        i0.ɵɵtext(4, \"PRODUCT\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function ProductComponent_Template_form_ngSubmit_5_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelement(6, \"input\", 2)(7, \"br\");\n        i0.ɵɵelementStart(8, \"label\", 3);\n        i0.ɵɵtext(9, \"Select Category \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"select\", 4);\n        i0.ɵɵtemplate(11, ProductComponent_option_11_Template, 2, 2, \"option\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"br\")(13, \"input\", 6)(14, \"br\")(15, \"input\", 7)(16, \"br\")(17, \"input\", 8)(18, \"br\");\n        i0.ɵɵelementStart(19, \"button\", 9);\n        i0.ɵɵtext(20, \"Add\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.products);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngForOf\", ctx.loaddata);\n      }\n    },\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;;;;ICWpDC,kCAAyE;IACxEA,YACD;IAAAA,iBAAS;;;;IAFkCA,yDAA6B;IACvEA,eACD;IADCA,yDACD;;;ADJf,OAAM,MAAOC,gBAAgB;EAM3BC,YAAoBC,YAAgC,EAASC,MAAa;IAAtD,iBAAY,GAAZD,YAAY;IAA6B,WAAM,GAANC,MAAM;IACnE,aAAQ,GAAW,IAAIN,SAAS,CAChC;MACEO,WAAW,EAAC,IAAIR,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACO,QAAQ,CAAC,CAAC;MACrDC,UAAU,EAAC,IAAIV,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACO,QAAQ,CAAC,CAAC;MACpDE,kBAAkB,EAAC,IAAIX,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACO,QAAQ,CAAC,CAAC;MAC5DG,YAAY,EAAC,IAAIZ,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACO,QAAQ,CAAC,CAAC;MACtDI,YAAY,EAAC,IAAIb,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACO,QAAQ,CAAC;KAEtD,CACF;EAV+E;EAa9EK,QAAQ;IACN,IAAI,CAACR,YAAY,CAACS,YAAY,EAAE,CAACC,SAAS,CAAEC,IAAQ,IAAG;MACrD,IAAI,CAACC,QAAQ,GAACD,IAAI;MAClBE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,QAAQ,CAAC;IAC5B,CAAC,CAAC;EACJ;EAEAG,QAAQ;IACJ,IAAG,IAAI,CAACC,QAAQ,CAACC,KAAK,EAAC;MACrB,IAAI,CAACjB,YAAY,CAACkB,UAAU,CAAC,IAAI,CAACF,QAAQ,CAACG,KAAK,CAAC,CAACT,SAAS,CAACU,MAAM,IAAE;QAClE,IAAGA,MAAM,CAACC,SAAS,EAAC;UAClBR,OAAO,CAACC,GAAG,CAACM,MAAM,CAAC;UACnBE,KAAK,CAAC,eAAe,CAAC;SACvB,MACG;UACFA,KAAK,CAAC,WAAW,CAAC;;MAEtB,CAAC,CAAC;;EAEN;EAAC;qBAtCQxB,gBAAgB;EAAA;EAAA;UAAhBA,gBAAgB;IAAAyB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCT7B9B,+BAAgB;QAChBA,uBAEO;QACPA,4BAAM;QACEA,uBAAO;QAAAA,iBAAK;QAChBA,+BAAsD;QAAxBA;UAAA,OAAY+B,cAAU;QAAA,EAAC;QACjD/B,2BAAwG;QAExGA,gCAAwB;QAAAA,gCAAgB;QAAAA,iBAAQ;QACzCA,kCAAiH;QACjHA,yEAES;QACTA,iBAAS;QACTA,sBAAI;QAOXA,kCAAsB;QAAAA,oBAAG;QAAAA,iBAAS;;;QAhBhCA,eAAsB;QAAtBA,wCAAsB;QAKaA,eAAW;QAAXA,sCAAW","names":["FormControl","FormGroup","Validators","i0","ProductComponent","constructor","adminService","router","productName","required","categoryId","productDescription","productPrice","productStock","ngOnInit","loadCategory","subscribe","data","loaddata","console","log","onSubmit","products","valid","addProduct","value","result","productId","alert","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/albinantony/Desktop/onlineshoppingfr/onlineshoppingfr/src/app/admin/product/product.component.ts","/home/albinantony/Desktop/onlineshoppingfr/onlineshoppingfr/src/app/admin/product/product.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AdminServiceService } from 'src/app/service/admin-service.service';\n\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.scss']\n})\nexport class ProductComponent implements OnInit {\n\n  loaddata: any;\n  categoryId:any;\n\n\n  constructor(private adminService:AdminServiceService,private router:Router) { }\n  products:FormGroup=new FormGroup(\n  {\n    productName:new FormControl('',[Validators.required]),\n    categoryId:new FormControl('',[Validators.required]),\n    productDescription:new FormControl('',[Validators.required]),\n    productPrice:new FormControl('',[Validators.required]),\n    productStock:new FormControl('',[Validators.required])\n\n  }\n)\n\n  \n  ngOnInit(): void {\n    this.adminService.loadCategory().subscribe((data:any)=>{\n      this.loaddata=data;\n      console.log(this.loaddata);\n    })\n  }\n\n  onSubmit() {\n      if(this.products.valid){\n        this.adminService.addProduct(this.products.value).subscribe(result=>{\n          if(result.productId){\n            console.log(result);\n            alert(\"Product Added\")\n          }\n          else{\n            alert(\"Not added\")\n          }\n        })\n      }\n    }\n\n}\n","<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n\n</head>\n<body>\n    <h1>PRODUCT</h1>\n    <form [formGroup]=\"products\"  (ngSubmit)=\"onSubmit()\">\n        <input type=\"text\" formControlName=\"productName\" name=\"productName\" placeholder=\"Enter the productname\">\n        <br>\n        <label for=\"categoryId\">Select Category </label>\n               <select class=\"dropbtn\" type=\"input\" formControlName=\"categoryId\"  name=\"select\" placeholder=\"Select Category\"  >\n               <option  *ngFor=\"let category of loaddata\" value={{category.categoryId}}>\n                {{category.categoryName}}\n               </option>\n               </select>\n               <br>\n        <input type=\"text\" formControlName=\"productDescription\" name=\"productDescription\" placeholder=\"Enter the productdescription\">\n        <br>\n        <input type=\"number\" formControlName=\"productPrice\" name=\"productPrice\" placeholder=\"Enter the Productprice\">\n        <br>\n        <input type=\"number\" formControlName=\"productStock\" name=\"productStock\" placeholder=\"Enter the productStock\">\n        <br>\n        <button type=\"submit\">Add</button>\n    </form>\n</body>\n</html>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}